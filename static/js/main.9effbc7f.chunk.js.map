{"version":3,"sources":["API.js","Axios.js","Row/Row.js","Banner/Banner.js","Nav/Nav.js","ClickBanner/ClickBanner.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","genre","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","props","largeRow","title","fetchUrl","setClick","setGetName","useState","movies","setMovies","useEffect","a","get","res","data","results","getdata","Picture","movie","onMouseOver","setOnMouseOver","className","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","poster_path","alt","name","onClick","onMouseLeave","id","map","Banner","setBackDropHandler","setMovie","Math","floor","random","length","getData","age","overview","vote_average","genre_ids","value","Nav","click","handleShow","setHandleShow","window","addEventListener","scrollY","src","width","ClickBanner","val","fontSize","original_language","slice","App","getName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9effbc7f.chunk.js","sourcesContent":["const API_KEY = '04578618b6c6b9de46d1065c94ee22cd';\r\n\r\nconst genre = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default genre;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance;","import axios from \"../Axios\";\r\nimport React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"../Row/Row.css\";\r\n\r\nfunction Row(props) {\r\n  const baseURL = \"https://image.tmdb.org/t/p/original/\";\r\n  const { largeRow, title, fetchUrl, setClick, setGetName } = props;\r\n\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getdata() {\r\n      const res = await axios.get(fetchUrl);\r\n      setMovies(res.data.results);\r\n    }\r\n    getdata();\r\n  }, [fetchUrl]);\r\n\r\n  const Picture = ({ movie }) => {\r\n    const [onMouseOver, setOnMouseOver] = useState(false);\r\n    return (\r\n      <section\r\n        className={`row_poster ${largeRow ? \"rowposterLarge\" : \"\"}`}\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center center\",\r\n          backgroundImage: `url(\"${baseURL}${\r\n            largeRow ? movie?.backdrop_path : movie?.poster_path\r\n          }\")`,\r\n        }}\r\n        key={movie?.id}\r\n        alt={movie?.name}\r\n        onClick={() => {\r\n          setClick(true);\r\n          setGetName(movie);\r\n        }}\r\n        onMouseOver={() => {\r\n          setOnMouseOver(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setOnMouseOver(false);\r\n        }}\r\n      >\r\n        <div className=\"contents-on-img\">\r\n          <p className={onMouseOver ? \"visibleName\" : \"notVisible \"}>\r\n            {movie?.title || movie?.name}\r\n          </p>\r\n          <button className={onMouseOver ? \"visibleButton\" : \"notVisible\"}>\r\n            Watch\r\n          </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      <div id=\"row_posters\">\r\n        {movies.map((movie) => {\r\n          return <Picture movie={movie} key={movie.name} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import axios from \"../Axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport genre from \"../API\";\r\nimport \"../Banner/Banner.css\";\r\n\r\nfunction Banner({setBackDropHandler}) {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const res = await axios.get(genre.fetchNetflixOriginals);\r\n      setMovie(\r\n        res.data.results[\r\n          Math.floor(Math.random() * res.data.results.length - 1)\r\n        ]\r\n      );\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  var age = \"16+\";\r\n \r\n  return (\r\n    <article\r\n      className=\"Main_banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"movie_name\">{movie.name}</h1>\r\n        <button className=\"banner_button\">Play</button>\r\n        <button className=\"banner_button\">My List</button>\r\n        <p className=\"desc\"> \r\n          {movie.overview}\r\n        </p>\r\n        <div className=\"filmdata\">\r\n          <span>\r\n            IMDB Rating <b>{movie.vote_average}/10</b>\r\n          </span>\r\n\r\n          <b>\r\n            {movie.genre_ids?.map((value) => {\r\n              if (value === 18) {\r\n                age = \"18+\";\r\n              }\r\n            })}\r\n            <span className=\"ageres\">{age}</span>\r\n          </b>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../Nav/Nav.css\";\r\n\r\nfunction Nav({click, setClick}) {\r\n  const [handleShow, setHandleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        setHandleShow(true);\r\n      } else {\r\n        setHandleShow(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <nav className= {handleShow && \"bg-clr\"}>\r\n      <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/255px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Neflix_logo\"\r\n        width=\"80px\"\r\n        className=\"icon\"\r\n        onClick={() => setClick(false)}\r\n      />\r\n\r\n      <img\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"Netflix_avatar\"\r\n        width=\"30px\"\r\n        className=\"avatar\"\r\n      />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React, { Fragment } from \"react\";\r\nimport \"../ClickBanner/ClickBanner.css\";\r\n\r\nfunction ClickBanner({ movie }) {\r\n  var val = \"16+\";\r\n  let overview = movie.overview;\r\n  return (\r\n    <Fragment>\r\n      <article\r\n        className=\"banner\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\r\n          backgroundPosition: \"center center\",\r\n        }}\r\n      >\r\n        <div className=\"banner-contents\">\r\n          <h1 style={{fontSize:\"35px\"}}>\r\n            {movie?.name || movie?.title}({movie.original_language})\r\n          </h1>\r\n          <p>\r\n            {overview.length > 400\r\n              ? overview.slice(0, 380) + \".......\"\r\n              : overview}\r\n          </p>\r\n          <button>Watch</button>\r\n          <div className=\"film-data\">\r\n            <span>\r\n              IMDB Rating <b>{movie.vote_average}/10</b>\r\n            </span>\r\n            <b>\r\n              {movie.genre_ids.map((value) => {\r\n                if (value === 18) {\r\n                  val = \"18+\";\r\n                }\r\n              })}\r\n              <span className=\"ageres\">{val}</span>\r\n            </b>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ClickBanner;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport genre from \"./API\";\nimport Row from \"./Row/Row\";\nimport Banner from \"./Banner/Banner\";\nimport Nav from \"./Nav/Nav\";\nimport ClickBanner from \"./ClickBanner/ClickBanner\";\n\nconst App = () => {\n  const [click, setClick] = useState(false);\n  const [getName, setGetName] = useState([]);\n  const [backDropHandler, setBackDropHandler] = useState(false);\n  return (\n    <div className=\"App\">\n\n      {/* Nav Bar */}\n      <Nav click={click} setClick={setClick} />\n\n      {click ? (\n        <ClickBanner movie={getName} />\n      ) : (\n        <section>\n          {/* Netflix Banner */}\n          <Banner setBackDropHandler={setBackDropHandler} />\n\n          {/* Netflix Rows */}\n          <section className=\"all-Rows\">\n            <Row\n              largeRow={false}\n              title=\"Netflix Originals\"\n              fetchUrl={genre.fetchNetflixOriginals}\n              click={click}\n              setClick={setClick}\n              getName={getName}\n              setGetName={setGetName}\n            />\n            <Row\n              largeRow={true}\n              title=\"Trending Now\"\n              fetchUrl={genre.fetchTrending}\n              click={click}\n              setClick={setClick}\n              getName={getName}\n              setGetName={setGetName}\n            />\n            <Row\n              largeRow={true}\n              title=\"Top Rated\"\n              fetchUrl={genre.fetchTopRated}\n              click={click}\n              setClick={setClick}\n              getName={getName}\n              setGetName={setGetName}\n            />\n            <Row\n              largeRow={true}\n              title=\"Action Movies\"\n              fetchUrl={genre.fetchActionMovies}\n              click={click}\n              setClick={setClick}\n              getName={getName}\n              setGetName={setGetName}\n            />\n            <Row\n              largeRow={true}\n              title=\"Comedy Movies\"\n              fetchUrl={genre.fetchComedyMovies}\n              click={click}\n              setClick={setClick}\n              getName={getName}\n              setGetName={setGetName}\n            />\n            <Row\n              largeRow={true}\n              title=\"Horror Movies\"\n              fetchUrl={genre.fetchHorrorMovies}\n              click={click}\n              setClick={setClick}\n              getName={getName}\n              setGetName={setGetName}\n            />\n            <Row\n              largeRow={true}\n              title=\"Romance Movies\"\n              fetchUrl={genre.fetchRomanceMovies}\n              click={click}\n              setClick={setClick}\n              getName={getName}\n              setGetName={setGetName}\n            />\n            <Row\n              largeRow={true}\n              title=\"Documentaries\"\n              fetchUrl={genre.fetchDocumentaries}\n              click={click}\n              setClick={setClick}\n              getName={getName}\n              setGetName={setGetName}\n            />\n          </section>\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}